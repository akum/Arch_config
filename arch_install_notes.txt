# Enable SSH
systemctl start sshd
passwd

# Update the system clock
timedatectl set-ntp true

# Create partitions
fdisk /dev/sda <<EOF
g # Create a new empty GPT partition table
n # Add a new EFI partition of 100M


+100M
t # Change a partition type to "EFI System"
1

n # Add a new Linux partition with all of the remaining free space



w # Write table to disk and exit
EOF

# Format partions
mkfs.vfat -F32 /dev/sda1
mkfs.ext4 /dev/sda2

# Mount the new system
mount /dev/sda2 /mnt
mkdir /mnt/boot/
mount /dev/sda1 /mnt/boot/

# Sorting mirrors
grep -A1 --no-group-separator Canada /etc/pacman.d/mirrorlist > /etc/pacman.d/mirrorlist.backup
rankmirrors -n 6 /etc/pacman.d/mirrorlist.backup > /etc/pacman.d/mirrorlist

# Install the system
pacstrap /mnt base base-devel openssh

# Generate the fstab file
genfstab -U /mnt >> /mnt/etc/fstab

# Change root into the new system:
arch-chroot /mnt

# Enable DHCP
systemctl enable dhcpcd@enp0s3.service

# Enable SSH
systemctl enable sshd

# Setup system clock
ln -sf /usr/share/zoneinfo/EST5EDT /etc/localtime
hwclock --systohc --utc

# Set the hostname
echo Arch-VM > /etc/hostname

# Update locale
echo LANG=en_US.UTF-8 >> /etc/locale.conf
echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
echo "fr_CA.UTF-8 UTF-8" >> /etc/locale.gen
locale-gen

# Set password for root
passwd

# Add real user remove -s flag if you don't whish to use zsh
user=CHANGE_ME
useradd -m -g users -G wheel $user
passwd $user

# Enable sudo for wheel users
sed -i '/^#.* %wheel ALL=(ALL) NOPASSWD: ALL/s/^#//' /etc/sudoers

# Configure mkinitcpio with modules needed for the initrd image
sed -i '/^#.*COMPRESSION="lz4"/s/^#//' /etc/mkinitcpio.conf

# Regenerate initrd image
mkinitcpio -p linux

# Install bootloader
bootctl --path=/boot install

# Create EFI boot entry
cat > /boot/loader/loader.conf <<EOT
default  arch
timeout  1
editor   0
EOT

cat > /boot/loader/entries/arch.conf <<EOT
title    Arch Linux
linux    /vmlinuz-linux
initrd   /initramfs-linux.img
options  root=PARTUUID=$(blkid -s PARTUUID -o value /dev/sda2) rw
EOT

# Configure Bootloader for VirtualBox
cp /boot/EFI/systemd/systemd-bootx64.efi /boot/EFI/boot/bootx64.efi

# Exit new system and go into the cd shell
exit

# Unmount all partitions
umount -R /mnt

# Reboot into the new system, don't forget to remove the cd/usb
reboot
